c
n
c
n
display color
n
a.board.print
n
display end_pos
display start_pos
n
display destination
n
display chosen_position
display chosen_piece
exit
display end_pos
display start_pos
n
display destination
n
display chosen_position
display chosen_piece
exit
n
display end_pos
display start_pos
n
display color
display chosen_piece
c
n
color
chosen_piece
exit
chosen_piece
exit
display board
display board[chosen_position]
n
display chosen_piece
display chosen_position
n
display cursor.selected
display cursor.cursor_pos
display color
c
exit
chosen_piece
chosen_piece.color
n
c
n
c
display cursor.selected
display selected
c
display cursor.cursor_pos
display color
display get_input
q
players
exit
display players
display curr_player
c
display current_piece.valid_moves
c
display current_piece.valid_moves
exit
n
nn
n
nn
n
display col 
display row 
n
c
piece
exit
col
row
position
exit
n
display dy 
display dx
display possible_moves
curr_pos
c
display possible_moves
display curr_pos
displ curr_pos
c
board[[1,1]]
curr_pos
exit
curr_pos
exit
n
display possible_moves
possible_moves
c
board[[1,1]]
exit
board[[1,1]]
board
exit
board[1,1]
board[[1,1]]
board[0][0]
board[1][1]
board
exit
board[[2,0]]
board[[1,1]]
board[[0,1]]
board[[0,0]]
board[[1,1]]
board
exit
$b[[1,1]
$b[1][1]
board[[1,1]]
board[1][1]
board
exit
reset
board[[1,1]]
board[1][1]
board[1,1]
exit
board[1][1]
board[[1]]
board[[1,1]]
board[1,1]
board
quit
reset
$b.print
b.print
$b.[]([1,1])
$b[[1,1]]
board[1][1]
board[1][]1
board[1][1]
board
board[[1,1]]
board[1,1]
board
board[*curr_pos]
board[curr_pos]
n
c
n
c
n
curr_pos
position
n
quit
reset
$b[[1,1]].moves
load "board.rb"
position
curr_pos
